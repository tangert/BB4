public class BinarySearchTree {
    
    class Node {
        int data;
        Node left;
        Node right;
        
        public Node(int data) {
            this.data = data;
            left = null;
            right = null;
        }
    }
    
    private Node root;
    
    public Node get(int data) {
        
        if (root == null) {
            return; //nothing found
        }
        
        Node current = root;
        
        while(current != null && data != current.data) {
            
            if(data < current.data ? current = current.left : current = current.right);
            
        }
        
        return current;        
    }
                
    
    public void insert(int data) {
        Node newNode = new Node(data);
        Node current = root;
        
        if (root == null) {
            root = newNode;
            return;
        }
        
        while(current != null) {
            if (newNode.data < current.data) ? current = current.left : current = current.right;
        }
        
        current = newNode;
    
    }
    
    public Node remove(int data) {
    
    }
    
    public Node findMin() {
    
    }
    
    public Node findMax() {
    
    }
    
}
